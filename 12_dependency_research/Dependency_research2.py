# Напишите программу, которая по результатам наблюдений за двумя количественными признаками:
# – вычисляет выборочный коэффициент корреляции и P-значение для критерия проверки гипотезы о нулевом значении
# коэффициента корреляции;
# – вычисляет коэффициент Спирмена и P-значение для критерия Спирмена;
# – вычисляет коэффициент Крамера и P-значение для критерия Крамера;
# – разбивая диапазон количественных признаков на несколько интервалов строит по наблюдениям таблицу сопряжённости,
# вычисляет нормированные коэффициенты связи (Пирсона, Крамера и др.), меры прогноза Гутмана и P-значение
# для критерия хи-квадрат Фишера-Пирсона.
import numpy as np
import scipy.stats
from scipy import stats
from scipy.stats import chi2


def to_nominal(X, Y, size):
    x_step = (max(X) - min(X)) / size
    y_step = (max(Y) - min(Y)) / size
    x = min(X)
    n = len(X)
    nom = []
    while x < max(X):
        row = []
        y = min(Y)
        while y < max(Y):
            count = 0
            for i in range(n):
                if (X[i] >= x) & (X[i] < x + x_step) & (Y[i] <= y) & (Y[i] < y + y_step):
                    count += 1
            row.append(count)
            y += y_step
        nom.append(row)
        x += x_step
    nom[size - 1][size - 1] += 1
    return np.array(nom)


def quantitative_signs():
    X = list(map(float, input(f'Введите результаты наблюдений первого признака через пробел: ').split()))
    # X = [22.49, 22.56, 23.45, 22.58, 24.3, 24.2, 23.47, 23.5, 24.48, 25.02, 23.04, 23.24, 25.2, 24.61, 26.02]
    # X = [20.1, 23.6, 26.3, 19.9, 16.7, 23.2, 31.4, 33.5, 28.2, 35.3, 29.3]
    Y = list(map(float, input(f'Введите результаты наблюдений второго признака через пробел: ').split()))
    # Y = [52.93, 53.4, 53.7, 53.36, 61.8, 55.2, 53.54, 58.33, 60.4, 60.3, 54.28, 53.6, 62.24, 54.45, 61.52]
    # Y = [7.2, 7.1, 7.4, 6.1, 6.0, 7.3, 9.4, 9.2, 8.8, 10.4, 8.0]

    alpha = float(input(f'Введите уровень значимости альфа: '))

    # Вычисляем выборочный коэффициент корреляции и P-значение для критерия проверки гипотезы о нулевом значении
    # коэффициента корреляции
    # Вычислим коэффициент корреляции по формуле, а потом сверим результат с встроенной функцией stats.pearsonr()
    n = len(X)
    x_mean = np.mean(X)
    y_mean = np.mean(Y)
    sum_prod_diff = 0
    sum_diff_x_2 = 0
    sum_diff_y_2 = 0
    for i in range(n):
        difference_x = X[i] - x_mean
        difference_y = Y[i] - y_mean
        prod_diff = difference_x * difference_y
        sum_prod_diff += prod_diff
        sum_diff_x_2 += difference_x ** 2
        sum_diff_y_2 += difference_y ** 2
    r = (sum_prod_diff / n) / np.sqrt((sum_diff_x_2 / n) * (sum_diff_y_2 / n))
    print(f'Выборочный коэффициент корреляции {r:.5f}')

    # Вычислим статистику критерия по формуле, а потом сверим результат с встроенной функцией stats.pearsonr()
    T = (r * np.sqrt(n - 2)) / np.sqrt(1 - (r ** 2))
    print(f'Статистика критерия {T:.5f}')

    p_value = stats.t.pdf(T, df=(n - 2))
    print(f'P-значение {p_value:.5f}')

    # А теперь вычислим с помощью встроенной функции и сравним результаты
    k, p = stats.pearsonr(X, Y)
    print(f'Вычисления с помощью встроенной функции совпадают с расчётами выше: \
    \nВыборочный коэффициент корреляции {k:.5f} \nP-значение {p:.5f}')

    # Вычислим коэффициент Спирмена и P-значение для критерия Спирмена
    spearman_rho, P = stats.spearmanr(X, Y)
    print(f'Коэффициент Спирмена {spearman_rho:.5f}')
    print(f'P-значение для критерия Спирмена {P:.5f}')

    # Вычислим коэффициент Кендалла и Р-значение критерия Кендалла
    tau, pvalue = stats.kendalltau(X, Y)
    print(f'Коэффициент Кендалла {tau:.5f}')
    print(f'Р-значение для критерия Кендалла {pvalue:.5f}')

    # Перейдем к номинальной шкале
    print('Перейдем к номинальной шкале')
    contingency = to_nominal(X, Y, 2)
    print(f'Матрица сопряжённости: \n{contingency}')

    k, m = contingency.shape
    # Вычислим сумму по строкам матрицы сопряжённости
    sum_line = []
    for i in range(k):
        score1 = sum(contingency[i])
        sum_line.append(score1)

    # Вычислим сумму по столбцам матрицы сопряжённости
    sum_row = []
    for j in range(m):
        score2 = sum(contingency[:, j])
        sum_row.append(score2)

    sum_all = sum(sum_row)

    # Вычислим статистику хи-квадрат
    khi_2 = 0
    for i in range(k):
        for j in range(m):
            p = sum_line[i] * sum_row[j] / sum_all
            khi_2 += (contingency[i][j] - p) ** 2 / p
    print(f'Хи-квадрат {khi_2:.5f}')

    # P-значение для статистики критерия хи-квадрат
    degree_free = (m - 1) * (k - 1)
    edge_khi_2 = scipy.stats.chi2.ppf(1 - alpha, df=degree_free)
    print(f'Р-значение для критерия хи-квадрат {edge_khi_2:.5f}')

    # Вычислим нормированные коэффициенты связи
    # Коэффициент Пирсона
    P = np.sqrt(khi_2 / (sum_all + khi_2))
    print(f'Коэффициент Пирсона {P:.5f}')

    # Коэффициент Чупрова
    T = np.sqrt(khi_2 / (sum_all * np.sqrt(degree_free)))
    print(f'Коэффициент Чупрова {T:.5f}')

    # Коэффициент Крамера
    list_degree = [k - 1, m - 1]
    min_set_degree = set(list_degree)
    K = np.sqrt(khi_2 / (sum_all * min(min_set_degree)))
    print(f'Коэффициент Крамера {K:.5f}')

    # print(stats.chi2_contingency(contingency))


# Задача 2.1
# Группа пловцов из 15 человек принимает участие в местной спортивной олимпиаде. В программе состязаний два заплыва:
# 50 м вольным стилем и 100 м баттерфляем. Результаты соревнований следующие:

# No            1     2     3     4     5     6     7     8     9     10    11    12    13    14    15
# 50 м вольн.   22.49 22.56 23.45 22.58 24.3  24.2  23.47 23.5  24.48 25.02 23.04 23.24 25.2  24.61 26.02
# 100 м батт.   52.93 53.4  53.7  53.36 61.8  55.2  53.54 58.33 60.4  60.3  54.28 53.6  62.24 54.45 61.52

# Определите степень связи между результатами в разных заплывах
quantitative_signs()

# Задача 2.2
# В таблице приведены данные об урожайности пшеницы и картофеля на соседних полях.
# Что можно сказать о зависимости показателей урожайности картофеля и пшеницы?
# Годы      1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936
# Пшеница   20.1 23.6 26.3 19.9 16.7 23.2 31.4 33.5 28.2 35.3 29.3
# Картофель 7.2  7.1  7.4  6.1  6.0  7.3  9.4  9.2  8.8  10.4 8.0
quantitative_signs()
